reg16 = { "BC" | "DE" | "HL" | "SP" | "PC" }
reg8  = { "A" | "B" | "C" | "D" | "E" | "H" | "L" | "flags" }
imm   = { "imm" | "adr" | "$" ~ (ASCII_DIGIT)+ }
flag  = { "Z" | "S" | "P" | "CY" | "AC" }
mem   = { "(" ~ expression ~ ")" }

binary_op = { add | sub | and | or | xor | swap }
    add  = { "+" }
    sub  = { "-" }
    and  = { "&" }
    or   = { "|" }
    xor  = { "^" }
    swap = { "<->" }

unary_op = { not | call }
	not  = { "!" }
    call = { "CALL" }

nonary_op = { ret }
    ret = { "RET" }

operand = { reg16 | flag | reg8 | mem | imm | ASCII_DIGIT }


stmt = { assignment | condition | expression | empty }
    empty      = { "" }
	assignment = { operand ~ "<-" ~ expression }
    condition  = { "if" ~ expression ~ "," ~ stmt }
    expression = { nonary | unary | binary }
    	nonary = { nonary_op }
        unary  = { unary_op ~ operand }
        binary = { operand ~ (binary_op ~ operand)* }

logic = { SOI ~ stmt ~ (";" ~ stmt)* ~ ";"? ~ EOI }

WHITESPACE = _{ " " | "\t" | "\n" }
